= form_for @papyrus do |f|
  -if @papyrus.errors.any?
    #error_explanation.formerror.alert.alert-error
      %h3= "#{pluralize(@papyrus.errors.count, "error")} prohibited this papyrus from being saved:"
      %ul
        - @papyrus.errors.full_messages.each do |msg|
          %li= msg

  = render_field('MQT Number', f.text_field(:mqt_number))
  = render_field('Inventory ID', f.text_field(:inventory_id))
  = render_field_with_block('Languages') do
    - Language.all.each do |l|
      .checkbox
        = check_box_tag "papyrus[language_ids][]", l.id, @papyrus.languages.include?(l), id: "papyrus_language_ids_#{l.id}", class: 'papyrus_language_checkbox'
        = label_tag "papyrus_language_ids_#{l.id}", l.name
  = render_field('Dimensions', f.text_area(:dimensions, :class => "medium"))
  = render_field_with_block('Date') do
    = f.text_field(:date_year, class: 'input-mini')
    = f.select(:date_era, [['CE', 'CE'], ['BCE', 'BCE']], include_blank: true)
  = render_field('General Note', f.text_field(:general_note))
  = render_field('Note', f.text_field(:note))
  = render_field('Paleographic Description', f.text_field(:paleographic_description))
  = render_field('Recto Note', f.text_field(:recto_note))
  = render_field('Verso Note', f.text_field(:verso_note))
  = render_field('Country of Origin', f.select(:country_of_origin_id, Country.all.map{|c| [c.name, c.id]}, {include_blank: true}, id: 'papyrus_country_of_origin'))
  = render_field('Origin Details', f.text_field(:origin_details))
  = render_field('Source of Acquisition', f.text_field(:source_of_acquisition))
  = render_field('Preservation Note', f.text_field(:preservation_note))
  = render_field('Genre', f.select(:genre_id, Genre.all.map{|g| [g.name, g.id]}, {include_blank: true}, id: 'papyrus_genre'))
  = render_field('Language Note', f.text_field(:language_note))
  = render_field('Summary', f.text_field(:summary))
  = render_field('Original Text', f.text_field(:original_text))
  = render_field('Translated Text', f.text_field(:translated_text))
  .form-actions
    = f.submit 'Save', class: "btn"
