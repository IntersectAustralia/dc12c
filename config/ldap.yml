## Authorizations
# Uncomment out the merging for each enviornment that you'd like to include.
# You can also just copy and paste the tree (do not include the "authorizations") to each
# enviornment if you need something different per enviornment.
authorizations: &AUTHORIZATIONS
  group_base: ou=groups,dc=test,dc=com
  ## Requires config.ldap_check_group_membership in devise.rb be true
  # Can have multiple values, must match all to be authorized
  required_groups:
    # If only a group name is given, membership will be checked against "uniqueMember"
    - cn=admins,ou=groups,dc=test,dc=com
    - cn=users,ou=groups,dc=test,dc=com
    # If an array is given, the first element will be the attribute to check against, the second the group name
    - ["moreMembers", "cn=users,ou=groups,dc=test,dc=com"]
  ## Requires config.ldap_check_attributes in devise.rb to be true
  ## Can have multiple attributes and values, must match all to be authorized
  require_attribute:
    objectClass: inetOrgPerson
    authorizationRole: postsAdmin

## Enviornments

development: &development
  host: localhost
  attribute: uid
  one_id_key: uid
  base: ou=people,dc=test,dc=com
  admin_user: cn=admin,dc=test,dc=com
  admin_password: admin_password
  ssl: false
  base: OU=Active,OU=MQ-Users,DC=mqauth,DC=uni,DC=mq,DC=edu,DC=au
  admin_user: CN=admin,DC=mqauth,DC=uni,DC=mq,DC=edu,DC=au
  admin_password: adminpassword
  port: 3897

qa:
  <<: *development

staging:
  <<: *development

test:
  host: localhost
  attribute: uid
  one_id_key: uid
  base: ou=people,dc=test,dc=com
  admin_user: cn=admin,dc=test,dc=com
  admin_password: admin_password
  ssl: false
  base: OU=Active,OU=MQ-Users,DC=mqauth,DC=uni,DC=mq,DC=edu,DC=au
  admin_user: CN=admin,DC=mqauth,DC=uni,DC=mq,DC=edu,DC=au
  admin_password: adminpassword
  port: 54321

jenkins:
  host: localhost
  attribute: uid
  one_id_key: uid
  base: ou=people,dc=test,dc=com
  admin_user: cn=admin,dc=test,dc=com
  admin_password: admin_password
  ssl: false
  base: OU=Active,OU=MQ-Users,DC=mqauth,DC=uni,DC=mq,DC=edu,DC=au
  admin_user: CN=admin,DC=mqauth,DC=uni,DC=mq,DC=edu,DC=au
  admin_password: adminpassword
  port: 54321

<% `. /etc/profile; env| grep PAPYRI`.split("\n").map{|line|k,v = line.split('='); ENV[k] = v} %>
production:
  host: <%= ENV['PAPYRI_LDAP_HOST'] %>
  port: <%= ENV['PAPYRI_LDAP_PORT'] %>
  attribute: sAMAccountName
  one_id_key: sAMAccountName
  base: OU=Active,OU=MQ-Users,DC=mqauth,DC=uni,DC=mq,DC=edu,DC=au
  admin_user: <%= ENV['PAPYRI_LDAP_USER'] %>
  admin_password: <%= ENV['PAPYRI_LDAP_PASSWORD'] %>
  ssl: true

showcase:
  host: <%= ENV['PAPYRI_LDAP_HOST'] %>
  port: <%= ENV['PAPYRI_LDAP_PORT'] %>
  attribute: sAMAccountName
  one_id_key: sAMAccountName
  base: OU=Active,OU=MQ-Users,DC=mqauth,DC=uni,DC=mq,DC=edu,DC=au
  admin_user: <%= ENV['PAPYRI_LDAP_USER'] %>
  admin_password: <%= ENV['PAPYRI_LDAP_PASSWORD'] %>
  ssl: false
